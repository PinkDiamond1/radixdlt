/*
 * Radix System API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.radixdlt.api.system.openapitools.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * NetworkingInboundMetrics
 */
@JsonPropertyOrder({
  NetworkingInboundMetrics.JSON_PROPERTY_PROCESSED,
  NetworkingInboundMetrics.JSON_PROPERTY_DISCARDED,
  NetworkingInboundMetrics.JSON_PROPERTY_RECEIVED
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-20T22:11:26.095756951+01:00[Europe/Warsaw]")
public class NetworkingInboundMetrics {
  public static final String JSON_PROPERTY_PROCESSED = "processed";
  private Long processed;

  public static final String JSON_PROPERTY_DISCARDED = "discarded";
  private Long discarded;

  public static final String JSON_PROPERTY_RECEIVED = "received";
  private Long received;

  public NetworkingInboundMetrics processed(Long processed) {
    this.processed = processed;
    return this;
  }

   /**
   * Get processed
   * @return processed
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_PROCESSED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getProcessed() {
    return processed;
  }


  @JsonProperty(JSON_PROPERTY_PROCESSED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProcessed(Long processed) {
    this.processed = processed;
  }


  public NetworkingInboundMetrics discarded(Long discarded) {
    this.discarded = discarded;
    return this;
  }

   /**
   * Get discarded
   * @return discarded
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_DISCARDED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getDiscarded() {
    return discarded;
  }


  @JsonProperty(JSON_PROPERTY_DISCARDED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDiscarded(Long discarded) {
    this.discarded = discarded;
  }


  public NetworkingInboundMetrics received(Long received) {
    this.received = received;
    return this;
  }

   /**
   * Get received
   * @return received
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_RECEIVED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getReceived() {
    return received;
  }


  @JsonProperty(JSON_PROPERTY_RECEIVED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setReceived(Long received) {
    this.received = received;
  }


  /**
   * Return true if this NetworkingInboundMetrics object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NetworkingInboundMetrics networkingInboundMetrics = (NetworkingInboundMetrics) o;
    return Objects.equals(this.processed, networkingInboundMetrics.processed) &&
        Objects.equals(this.discarded, networkingInboundMetrics.discarded) &&
        Objects.equals(this.received, networkingInboundMetrics.received);
  }

  @Override
  public int hashCode() {
    return Objects.hash(processed, discarded, received);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NetworkingInboundMetrics {\n");
    sb.append("    processed: ").append(toIndentedString(processed)).append("\n");
    sb.append("    discarded: ").append(toIndentedString(discarded)).append("\n");
    sb.append("    received: ").append(toIndentedString(received)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

