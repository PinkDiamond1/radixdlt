/*
 * Radix System API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.radixdlt.api.system.openapitools.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * BFTVertexStoreMetrics
 */
@JsonPropertyOrder({
  BFTVertexStoreMetrics.JSON_PROPERTY_SIZE,
  BFTVertexStoreMetrics.JSON_PROPERTY_FORKS,
  BFTVertexStoreMetrics.JSON_PROPERTY_REBUILDS,
  BFTVertexStoreMetrics.JSON_PROPERTY_INDIRECT_PARENTS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-20T22:11:26.095756951+01:00[Europe/Warsaw]")
public class BFTVertexStoreMetrics {
  public static final String JSON_PROPERTY_SIZE = "size";
  private Long size;

  public static final String JSON_PROPERTY_FORKS = "forks";
  private Long forks;

  public static final String JSON_PROPERTY_REBUILDS = "rebuilds";
  private Long rebuilds;

  public static final String JSON_PROPERTY_INDIRECT_PARENTS = "indirect_parents";
  private Long indirectParents;

  public BFTVertexStoreMetrics size(Long size) {
    this.size = size;
    return this;
  }

   /**
   * Get size
   * @return size
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getSize() {
    return size;
  }


  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSize(Long size) {
    this.size = size;
  }


  public BFTVertexStoreMetrics forks(Long forks) {
    this.forks = forks;
    return this;
  }

   /**
   * Get forks
   * @return forks
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_FORKS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getForks() {
    return forks;
  }


  @JsonProperty(JSON_PROPERTY_FORKS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setForks(Long forks) {
    this.forks = forks;
  }


  public BFTVertexStoreMetrics rebuilds(Long rebuilds) {
    this.rebuilds = rebuilds;
    return this;
  }

   /**
   * Get rebuilds
   * @return rebuilds
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_REBUILDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getRebuilds() {
    return rebuilds;
  }


  @JsonProperty(JSON_PROPERTY_REBUILDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRebuilds(Long rebuilds) {
    this.rebuilds = rebuilds;
  }


  public BFTVertexStoreMetrics indirectParents(Long indirectParents) {
    this.indirectParents = indirectParents;
    return this;
  }

   /**
   * Get indirectParents
   * @return indirectParents
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_INDIRECT_PARENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getIndirectParents() {
    return indirectParents;
  }


  @JsonProperty(JSON_PROPERTY_INDIRECT_PARENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIndirectParents(Long indirectParents) {
    this.indirectParents = indirectParents;
  }


  /**
   * Return true if this BFTVertexStoreMetrics object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BFTVertexStoreMetrics bfTVertexStoreMetrics = (BFTVertexStoreMetrics) o;
    return Objects.equals(this.size, bfTVertexStoreMetrics.size) &&
        Objects.equals(this.forks, bfTVertexStoreMetrics.forks) &&
        Objects.equals(this.rebuilds, bfTVertexStoreMetrics.rebuilds) &&
        Objects.equals(this.indirectParents, bfTVertexStoreMetrics.indirectParents);
  }

  @Override
  public int hashCode() {
    return Objects.hash(size, forks, rebuilds, indirectParents);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BFTVertexStoreMetrics {\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    forks: ").append(toIndentedString(forks)).append("\n");
    sb.append("    rebuilds: ").append(toIndentedString(rebuilds)).append("\n");
    sb.append("    indirectParents: ").append(toIndentedString(indirectParents)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

