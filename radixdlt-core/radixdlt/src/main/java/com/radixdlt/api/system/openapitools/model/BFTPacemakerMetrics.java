/*
 * Radix System API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.radixdlt.api.system.openapitools.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * BFTPacemakerMetrics
 */
@JsonPropertyOrder({
  BFTPacemakerMetrics.JSON_PROPERTY_TIMEOUTS_SENT,
  BFTPacemakerMetrics.JSON_PROPERTY_ROUND,
  BFTPacemakerMetrics.JSON_PROPERTY_PROPOSED_TRANSACTIONS,
  BFTPacemakerMetrics.JSON_PROPERTY_PROPOSALS_SENT,
  BFTPacemakerMetrics.JSON_PROPERTY_TIMED_OUT_ROUNDS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-20T22:11:26.095756951+01:00[Europe/Warsaw]")
public class BFTPacemakerMetrics {
  public static final String JSON_PROPERTY_TIMEOUTS_SENT = "timeouts_sent";
  private Long timeoutsSent;

  public static final String JSON_PROPERTY_ROUND = "round";
  private Long round;

  public static final String JSON_PROPERTY_PROPOSED_TRANSACTIONS = "proposed_transactions";
  private Long proposedTransactions;

  public static final String JSON_PROPERTY_PROPOSALS_SENT = "proposals_sent";
  private Long proposalsSent;

  public static final String JSON_PROPERTY_TIMED_OUT_ROUNDS = "timed_out_rounds";
  private Long timedOutRounds;

  public BFTPacemakerMetrics timeoutsSent(Long timeoutsSent) {
    this.timeoutsSent = timeoutsSent;
    return this;
  }

   /**
   * Get timeoutsSent
   * @return timeoutsSent
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TIMEOUTS_SENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getTimeoutsSent() {
    return timeoutsSent;
  }


  @JsonProperty(JSON_PROPERTY_TIMEOUTS_SENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTimeoutsSent(Long timeoutsSent) {
    this.timeoutsSent = timeoutsSent;
  }


  public BFTPacemakerMetrics round(Long round) {
    this.round = round;
    return this;
  }

   /**
   * Get round
   * @return round
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ROUND)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getRound() {
    return round;
  }


  @JsonProperty(JSON_PROPERTY_ROUND)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRound(Long round) {
    this.round = round;
  }


  public BFTPacemakerMetrics proposedTransactions(Long proposedTransactions) {
    this.proposedTransactions = proposedTransactions;
    return this;
  }

   /**
   * Get proposedTransactions
   * @return proposedTransactions
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_PROPOSED_TRANSACTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getProposedTransactions() {
    return proposedTransactions;
  }


  @JsonProperty(JSON_PROPERTY_PROPOSED_TRANSACTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProposedTransactions(Long proposedTransactions) {
    this.proposedTransactions = proposedTransactions;
  }


  public BFTPacemakerMetrics proposalsSent(Long proposalsSent) {
    this.proposalsSent = proposalsSent;
    return this;
  }

   /**
   * Get proposalsSent
   * @return proposalsSent
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_PROPOSALS_SENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getProposalsSent() {
    return proposalsSent;
  }


  @JsonProperty(JSON_PROPERTY_PROPOSALS_SENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProposalsSent(Long proposalsSent) {
    this.proposalsSent = proposalsSent;
  }


  public BFTPacemakerMetrics timedOutRounds(Long timedOutRounds) {
    this.timedOutRounds = timedOutRounds;
    return this;
  }

   /**
   * Get timedOutRounds
   * @return timedOutRounds
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TIMED_OUT_ROUNDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getTimedOutRounds() {
    return timedOutRounds;
  }


  @JsonProperty(JSON_PROPERTY_TIMED_OUT_ROUNDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTimedOutRounds(Long timedOutRounds) {
    this.timedOutRounds = timedOutRounds;
  }


  /**
   * Return true if this BFTPacemakerMetrics object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BFTPacemakerMetrics bfTPacemakerMetrics = (BFTPacemakerMetrics) o;
    return Objects.equals(this.timeoutsSent, bfTPacemakerMetrics.timeoutsSent) &&
        Objects.equals(this.round, bfTPacemakerMetrics.round) &&
        Objects.equals(this.proposedTransactions, bfTPacemakerMetrics.proposedTransactions) &&
        Objects.equals(this.proposalsSent, bfTPacemakerMetrics.proposalsSent) &&
        Objects.equals(this.timedOutRounds, bfTPacemakerMetrics.timedOutRounds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(timeoutsSent, round, proposedTransactions, proposalsSent, timedOutRounds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BFTPacemakerMetrics {\n");
    sb.append("    timeoutsSent: ").append(toIndentedString(timeoutsSent)).append("\n");
    sb.append("    round: ").append(toIndentedString(round)).append("\n");
    sb.append("    proposedTransactions: ").append(toIndentedString(proposedTransactions)).append("\n");
    sb.append("    proposalsSent: ").append(toIndentedString(proposalsSent)).append("\n");
    sb.append("    timedOutRounds: ").append(toIndentedString(timedOutRounds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

