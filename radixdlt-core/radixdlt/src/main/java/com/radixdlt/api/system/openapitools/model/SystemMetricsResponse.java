/*
 * Radix System API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.radixdlt.api.system.openapitools.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * SystemMetricsResponse
 */
@JsonPropertyOrder({
  SystemMetricsResponse.JSON_PROPERTY_BFT,
  SystemMetricsResponse.JSON_PROPERTY_SYNC,
  SystemMetricsResponse.JSON_PROPERTY_MEMPOOL,
  SystemMetricsResponse.JSON_PROPERTY_NETWORKING
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-20T22:11:26.095756951+01:00[Europe/Warsaw]")
public class SystemMetricsResponse {
  public static final String JSON_PROPERTY_BFT = "bft";
  private BFTMetrics bft;

  public static final String JSON_PROPERTY_SYNC = "sync";
  private SyncMetrics sync;

  public static final String JSON_PROPERTY_MEMPOOL = "mempool";
  private MempoolMetrics mempool;

  public static final String JSON_PROPERTY_NETWORKING = "networking";
  private NetworkingMetrics networking;

  public SystemMetricsResponse bft(BFTMetrics bft) {
    this.bft = bft;
    return this;
  }

   /**
   * Get bft
   * @return bft
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_BFT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BFTMetrics getBft() {
    return bft;
  }


  @JsonProperty(JSON_PROPERTY_BFT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBft(BFTMetrics bft) {
    this.bft = bft;
  }


  public SystemMetricsResponse sync(SyncMetrics sync) {
    this.sync = sync;
    return this;
  }

   /**
   * Get sync
   * @return sync
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SYNC)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public SyncMetrics getSync() {
    return sync;
  }


  @JsonProperty(JSON_PROPERTY_SYNC)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSync(SyncMetrics sync) {
    this.sync = sync;
  }


  public SystemMetricsResponse mempool(MempoolMetrics mempool) {
    this.mempool = mempool;
    return this;
  }

   /**
   * Get mempool
   * @return mempool
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_MEMPOOL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public MempoolMetrics getMempool() {
    return mempool;
  }


  @JsonProperty(JSON_PROPERTY_MEMPOOL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMempool(MempoolMetrics mempool) {
    this.mempool = mempool;
  }


  public SystemMetricsResponse networking(NetworkingMetrics networking) {
    this.networking = networking;
    return this;
  }

   /**
   * Get networking
   * @return networking
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NETWORKING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public NetworkingMetrics getNetworking() {
    return networking;
  }


  @JsonProperty(JSON_PROPERTY_NETWORKING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNetworking(NetworkingMetrics networking) {
    this.networking = networking;
  }


  /**
   * Return true if this SystemMetricsResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SystemMetricsResponse systemMetricsResponse = (SystemMetricsResponse) o;
    return Objects.equals(this.bft, systemMetricsResponse.bft) &&
        Objects.equals(this.sync, systemMetricsResponse.sync) &&
        Objects.equals(this.mempool, systemMetricsResponse.mempool) &&
        Objects.equals(this.networking, systemMetricsResponse.networking);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bft, sync, mempool, networking);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SystemMetricsResponse {\n");
    sb.append("    bft: ").append(toIndentedString(bft)).append("\n");
    sb.append("    sync: ").append(toIndentedString(sync)).append("\n");
    sb.append("    mempool: ").append(toIndentedString(mempool)).append("\n");
    sb.append("    networking: ").append(toIndentedString(networking)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

